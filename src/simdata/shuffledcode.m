function shuffled = shuffledcode(coding)
%SHUFFLEDCODE Given an input neural coding (e.g. the one generated by the
% getCoding() function, generates a new set of codes by shuffling the
% neurons for each individual code such that no neuron is in its original
% location. The newly generated code should have the same length, size, and
% weight distribution.
    
    % Get properties
    len = coding.length; shuffled.length = len;
    wts = coding.weights;
    shuffled.code = zeros(len, coding.size) - 2;  % +2 just for jitter
    
    for i = 1:coding.size
        p = randperm(len, len);
        w = coding.words(p, i);
        while (any(p == (1:len)) || any(sum(w == shuffled.code) == len))
            p = randperm(len, len);
            w = coding.words(p, i);
        end
        shuffled.code(:, i) = w;
    end
    
    % Get unique words
    shuffled.words = unique(shuffled.code', 'rows')';
    shuffled.size = length(shuffled.words);
    shuffled.weights = sum(shuffled.words);
    shuffled.sparsity = sum(shuffled.weights) / (shuffled.size * len);
    shuffled.redundancy = 1 - log2(shuffled.size) / len;
end

